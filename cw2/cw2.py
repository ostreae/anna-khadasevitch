# Для работы программы понадобится файл с разметкой из исландского корпуса. Размеченные тексты выстроены таким образом, что на одной строке
# располагается одна словоформа в следующем виде: <w lemma="til" type="ae">Til</w>. Морфологическая разметка даётся как последовательность символов
# внутри type="", где каждый символ кодирует определённый грамматический показатель. Что значат эти показатели, написано в отдельном pdf-файле .

# открыть файл с корпусом, подсчитать в нём число строк заголовка XML (то есть от начала файла до строки, которая содержит "</teiHeader>"),
# открыть другой файл для записи, записать туда число подсчитанных строк.

# cоздать словарь, в котором ключами являются строки с морфологическим разбором слов (то есть значения атрибута type для строк,
# в которых имеется "<w lemma="), а значениями - количество их вхождений в файле. Распечатать пары ключ-значение из словаря в открытый для записи файл
# таким образом, чтобы каждая пара располагалась на одной строке.

# c помощью регулярных выражений найти все вхождения местоимений среднего года (то есть таких разборов, в которых type=" начинается с "f" и содержит
# "h" на третьей позиции, например: type="fohfþ"). Соответствующие этим характеристикам словоформы распечатать в том же файле для записи в одну строку
# через запятую. Преобразуйте содержимое корпуса в формат csv. Возьмите строки внутри тэга <body> и очистите их от тэгов.
# Запишите результат в новый файл следующим образом: на одной строке должны находиться лемма, разбор, словоформа, разделенные запятыми.
#  Пунктацию и служебную информацию можно удалить.

import re

def open_file_r():
    with open('corpus.xml', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    return lines

def counter(lines):
    count = 0
    for line in lines:
        if '</teiHeader>' not in line:
            count += 1
        else:
            return count

def dic(lines):
    p = re.compile('type="([a-zþ123-]*)"')
    dic = {}
    result = []
    for line in lines:
        if '<w lemma=' in line:
            i = p.findall(line)[0]
            if i not in dic:
                dic[i] = 1
            else:
                dic[i] += 1
    for i in dic:
        result.append('{}, {}'.format(i, dic[i]))
    return  result


def open_file_w(lines):
    count = counter(lines)
    with open('file.txt', 'w', encoding='utf-8') as w:
        w.write(str(counter(lines)))

def main():
    corp = open_file_r()
    open_file_w(corp)
    with open('file2.txt', 'w', encoding='utf-8') as d:
        d.write('\n'.join(dic(corp)))



if __name__ == '__main__':
    main()